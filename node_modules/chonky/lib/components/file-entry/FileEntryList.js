"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileEntryList = void 0;
var react_1 = __importDefault(require("react"));
var ChonkyIcon_1 = require("../external/ChonkyIcon");
var TextPlaceholder_1 = require("../external/TextPlaceholder");
var FileEntry_hooks_1 = require("./FileEntry-hooks");
exports.FileEntryList = react_1.default.memo(function (props) {
    var file = props.file, style = props.style;
    // Get file entry components/properties
    var _a = FileEntry_hooks_1.useCommonFileEntryComponents(props, false, true, false, null), entryClassName = _a.entryClassName, dndIconName = _a.dndIconName, dndIconColor = _a.dndIconColor, fileColor = _a.fileColor, iconSpin = _a.iconSpin, icon = _a.icon, fileDateString = _a.fileDateString, fileSizeString = _a.fileSizeString, modifierIconComponents = _a.modifierIconComponents, fileNameComponent = _a.fileNameComponent;
    return (react_1.default.createElement("div", { className: entryClassName, style: __assign(__assign({}, style), { color: dndIconColor }) },
        react_1.default.createElement("div", { className: "chonky-file-entry-column chonky-file-entry-column-icon", style: { color: dndIconName ? dndIconColor : fileColor } },
            react_1.default.createElement("div", { className: "chonky-file-entry-column-inside" }, dndIconName ? (react_1.default.createElement(ChonkyIcon_1.ChonkyIconFA, { icon: dndIconName, spin: false, fixedWidth: true })) : (react_1.default.createElement(ChonkyIcon_1.ChonkyIconFA, { icon: icon, spin: iconSpin, fixedWidth: true })))),
        react_1.default.createElement("div", { className: "chonky-file-entry-column chonky-file-entry-column-name" },
            react_1.default.createElement("div", { className: "chonky-file-entry-column-inside", title: file ? file.name : undefined },
                modifierIconComponents.length > 0 && (react_1.default.createElement("span", { className: "chonky-file-entry-column-name-modifiers" }, modifierIconComponents)),
                fileNameComponent)),
        react_1.default.createElement("div", { className: "chonky-file-entry-column chonky-file-entry-column-size" },
            react_1.default.createElement("div", { className: "chonky-file-entry-column-inside" }, file ? (fileSizeString !== null && fileSizeString !== void 0 ? fileSizeString : react_1.default.createElement("span", null, "\u2014")) : (react_1.default.createElement(TextPlaceholder_1.TextPlaceholder, { minLength: 5, maxLength: 15 })))),
        react_1.default.createElement("div", { className: "chonky-file-entry-column chonky-file-entry-column-date" },
            react_1.default.createElement("div", { className: "chonky-file-entry-column-inside" }, file ? (fileDateString !== null && fileDateString !== void 0 ? fileDateString : react_1.default.createElement("span", null, "\u2014")) : (react_1.default.createElement(TextPlaceholder_1.TextPlaceholder, { minLength: 10, maxLength: 20 })))),
        react_1.default.createElement("div", { className: "chonky-file-entry-outline" }),
        react_1.default.createElement("div", { className: "chonky-file-entry-selection" })));
});
