"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileEntryGrid = void 0;
var react_1 = __importDefault(require("react"));
var file_helper_1 = require("../../util/file-helper");
var ChonkyIcon_1 = require("../external/ChonkyIcon");
var FileThumbnail_1 = require("../internal/FileThumbnail");
var FileEntry_hooks_1 = require("./FileEntry-hooks");
exports.FileEntryGrid = react_1.default.memo(function (props) {
    var file = props.file, style = props.style;
    // Deal with thumbnails
    var _a = FileEntry_hooks_1.useThumbnailUrl(file), thumbnailUrl = _a.thumbnailUrl, thumbnailLoading = _a.thumbnailLoading;
    // Get file entry components/properties
    var _b = FileEntry_hooks_1.useCommonFileEntryComponents(props, true, !!thumbnailUrl, thumbnailLoading, thumbnailUrl), entryClassName = _b.entryClassName, dndIconName = _b.dndIconName, dndIconColor = _b.dndIconColor, fileColor = _b.fileColor, iconSpin = _b.iconSpin, icon = _b.icon, fileDateString = _b.fileDateString, fileSizeString = _b.fileSizeString, modifierIconComponents = _b.modifierIconComponents, fileNameComponent = _b.fileNameComponent;
    return (react_1.default.createElement("div", { className: entryClassName, style: style },
        react_1.default.createElement("div", { className: "chonky-file-entry-inside" },
            dndIconName && (react_1.default.createElement("div", { className: "chonky-file-entry-dnd-indicator", style: { color: dndIconColor } },
                react_1.default.createElement(ChonkyIcon_1.ChonkyIconFA, { icon: dndIconName }))),
            react_1.default.createElement("div", { className: "chonky-file-entry-preview" },
                react_1.default.createElement("div", { className: "chonky-file-details" },
                    react_1.default.createElement("div", { className: "chonky-file-details-inside" },
                        react_1.default.createElement("div", { className: "chonky-file-details-item" }, fileDateString),
                        react_1.default.createElement("div", { className: "chonky-file-details-item" }, fileSizeString))),
                react_1.default.createElement("div", { className: "chonky-file-icon" },
                    file_helper_1.FileHelper.isDirectory(file) && (react_1.default.createElement("div", { className: "chonky-file-icon-children-count" }, file_helper_1.FileHelper.getChildrenCount(file))),
                    react_1.default.createElement("div", { className: "chonky-file-icon-inside" },
                        react_1.default.createElement(ChonkyIcon_1.ChonkyIconFA, { icon: icon, spin: iconSpin }))),
                react_1.default.createElement("div", { className: "chonky-file-selection" }),
                react_1.default.createElement(FileThumbnail_1.FileThumbnail, { thumbnailUrl: thumbnailUrl }),
                react_1.default.createElement("div", { className: "chonky-file-background", style: { backgroundColor: fileColor } })),
            react_1.default.createElement("div", { className: "chonky-file-entry-description" },
                react_1.default.createElement("div", { className: "chonky-file-entry-description-title", title: file ? file.name : undefined },
                    modifierIconComponents.length > 0 && (react_1.default.createElement("span", { className: "chonky-file-entry-description-title-modifiers" }, modifierIconComponents)),
                    fileNameComponent)))));
});
