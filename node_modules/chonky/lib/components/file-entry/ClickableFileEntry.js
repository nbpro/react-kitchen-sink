"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClickableFileEntry = void 0;
var react_1 = __importStar(require("react"));
var file_helper_1 = require("../../util/file-helper");
var ClickableWrapper_1 = require("../internal/ClickableWrapper");
var ClickableFileEntry_hooks_1 = require("./ClickableFileEntry-hooks");
var FileEntryGrid_1 = require("./FileEntryGrid");
var FileEntryList_1 = require("./FileEntryList");
exports.ClickableFileEntry = react_1.default.memo(function (props) {
    var file = props.file, displayIndex = props.displayIndex, isGridView = props.isGridView;
    var fileClickHandlers = ClickableFileEntry_hooks_1.useFileClickHandlers(file, displayIndex);
    var _a = react_1.useState(false), focused = _a[0], setFocused = _a[1];
    var wrapperProps = __assign(__assign({ wrapperTag: 'div', passthroughProps: {
            className: 'chonky-file-entry-clickable-wrapper chonky-fill-parent',
        } }, (file_helper_1.FileHelper.isClickable(file) ? fileClickHandlers : undefined)), { setFocused: setFocused });
    return (react_1.default.createElement(ClickableWrapper_1.ClickableWrapper, __assign({}, wrapperProps), isGridView ? (react_1.default.createElement(FileEntryGrid_1.FileEntryGrid, __assign({}, props, { focused: focused }))) : (react_1.default.createElement(FileEntryList_1.FileEntryList, __assign({}, props, { focused: focused })))));
});
